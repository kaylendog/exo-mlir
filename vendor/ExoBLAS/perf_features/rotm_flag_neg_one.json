{
    "drotm_flag_neg_one_stride_1": {
        "flops": {
            "algorithm": "6*n",
            "scheduled": "24*(Mod(floor(n/4 + 3/4) + 1, 2) + 4*floor(floor(n/4 + 3/4)/4 - 1/4) + 2*floor((Mod(floor(n/4 + 3/4) + 3, 4))/2))"
        },
        "flops_upper_bound": {
            "algorithm": "6*n",
            "scheduled": "6*(n + 15)"
        },
        "load_mem_traffic": {
            "algorithm": "8*(9*n)",
            "scheduled": "8*(8*(Mod(floor(n/4 + 3/4) + 1, 2)) + 32*floor(floor(n/4 + 3/4)/4 - 1/4) + 16*floor((Mod(floor(n/4 + 3/4) + 3, 4))/2))"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "8*(9*n)",
            "scheduled": "8*(2*n + 30)"
        },
        "store_mem_traffic": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(8*(Mod(floor(n/4 + 3/4) + 1, 2)) + 32*floor(floor(n/4 + 3/4)/4 - 1/4) + 16*floor((Mod(floor(n/4 + 3/4) + 3, 4))/2))"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(2*n + 30)"
        }
    },
    "srotm_flag_neg_one_stride_1": {
        "flops": {
            "algorithm": "6*n",
            "scheduled": "48*(Mod(floor(n/8 + 7/8) + 1, 2) + 4*floor(floor(n/8 + 7/8)/4 - 1/4) + 2*floor((Mod(floor(n/8 + 7/8) + 3, 4))/2))"
        },
        "flops_upper_bound": {
            "algorithm": "6*n",
            "scheduled": "6*(n + 31)"
        },
        "load_mem_traffic": {
            "algorithm": "4*(9*n)",
            "scheduled": "4*(16*(Mod(floor(n/8 + 7/8) + 1, 2)) + 64*floor(floor(n/8 + 7/8)/4 - 1/4) + 32*floor((Mod(floor(n/8 + 7/8) + 3, 4))/2))"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "4*(9*n)",
            "scheduled": "4*(2*n + 62)"
        },
        "store_mem_traffic": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(16*(Mod(floor(n/8 + 7/8) + 1, 2)) + 64*floor(floor(n/8 + 7/8)/4 - 1/4) + 32*floor((Mod(floor(n/8 + 7/8) + 3, 4))/2))"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(2*n + 62)"
        }
    }
}