{
    "ddot_stride_1": {
        "flops": {
            "algorithm": "2*n",
            "scheduled": "4*(2*(Mod(floor(n/4 + 3/4) + 1, 2)) + 8*floor(floor(n/4 + 3/4)/4 - 1/4) + 4*floor((Mod(floor(n/4 + 3/4) + 3, 4))/2) + 7)"
        },
        "flops_upper_bound": {
            "algorithm": "2*n",
            "scheduled": "2*(n + 29)"
        },
        "load_mem_traffic": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(8*(Mod(floor(n/4 + 3/4) + 1, 2)) + 32*floor(floor(n/4 + 3/4)/4 - 1/4) + 16*floor((Mod(floor(n/4 + 3/4) + 3, 4))/2) + 5)"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(2*n + 35)"
        },
        "store_mem_traffic": {
            "algorithm": "8*(n + 1)",
            "scheduled": "8*6"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "8*(n + 1)",
            "scheduled": "8*6"
        }
    },
    "sdot_stride_1": {
        "flops": {
            "algorithm": "2*n",
            "scheduled": "2*n"
        },
        "flops_upper_bound": {
            "algorithm": "2*n",
            "scheduled": "2*n"
        },
        "load_mem_traffic": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(3*n + 1)"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(3*n + 1)"
        },
        "store_mem_traffic": {
            "algorithm": "4*(n + 1)",
            "scheduled": "4*(n + 2)"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "4*(n + 1)",
            "scheduled": "4*(n + 2)"
        }
    }
}