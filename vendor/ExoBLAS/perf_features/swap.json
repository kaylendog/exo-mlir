{
    "dswap_stride_1": {
        "flops": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "flops_upper_bound": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "load_mem_traffic": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(8*(Mod(floor(n/4 + 3/4) + 1, 2)) + 32*floor(floor(n/4 + 3/4)/4 - 1/4) + 16*floor((Mod(floor(n/4 + 3/4) + 3, 4))/2))"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(2*n + 30)"
        },
        "store_mem_traffic": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(8*(Mod(floor(n/4 + 3/4) + 1, 2)) + 32*floor(floor(n/4 + 3/4)/4 - 1/4) + 16*floor((Mod(floor(n/4 + 3/4) + 3, 4))/2))"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "8*(3*n)",
            "scheduled": "8*(2*n + 30)"
        }
    },
    "sswap_stride_1": {
        "flops": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "flops_upper_bound": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "load_mem_traffic": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(3*n)"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(3*n)"
        },
        "store_mem_traffic": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(3*n)"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "4*(3*n)",
            "scheduled": "4*(3*n)"
        }
    }
}