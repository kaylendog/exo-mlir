{
    "dcopy_stride_1": {
        "flops": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "flops_upper_bound": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "load_mem_traffic": {
            "algorithm": "8*n",
            "scheduled": "8*n"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "8*n",
            "scheduled": "8*n"
        },
        "store_mem_traffic": {
            "algorithm": "8*n",
            "scheduled": "8*n"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "8*n",
            "scheduled": "8*n"
        }
    },
    "scopy_stride_1": {
        "flops": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "flops_upper_bound": {
            "algorithm": "0",
            "scheduled": "0"
        },
        "load_mem_traffic": {
            "algorithm": "4*n",
            "scheduled": "4*(8*(Mod(floor(n/8 + 7/8) + 1, 2)) + 32*floor(floor(n/8 + 7/8)/4 - 1/4) + 16*floor((Mod(floor(n/8 + 7/8) + 3, 4))/2))"
        },
        "load_mem_traffic_upper_bound": {
            "algorithm": "4*n",
            "scheduled": "4*(n + 31)"
        },
        "store_mem_traffic": {
            "algorithm": "4*n",
            "scheduled": "4*(8*(Mod(floor(n/8 + 7/8) + 1, 2)) + 32*floor(floor(n/8 + 7/8)/4 - 1/4) + 16*floor((Mod(floor(n/8 + 7/8) + 3, 4))/2))"
        },
        "store_mem_traffic_upper_bound": {
            "algorithm": "4*n",
            "scheduled": "4*(n + 31)"
        }
    }
}